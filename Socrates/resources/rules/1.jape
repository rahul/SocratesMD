Phase: Phase1
Input: Token Lookup title Percent//FEATURE
Options: control = appelt

Macro:NUMBER
(
{Token.category == CD}({Token.string == "."}{Token.category == CD})?
)

Macro:TM
(
{Token.string == "™"}|{Token.string == "®"}
)

Macro:MODEL
(
(({Token.string==~ "[A-Z]"}|{Token.orth == allCaps})({Token.string==~ "[A-Z]"}|{Token.kind == number}|{Token.orth == allCaps}|{Token.string == "-"})+)
|({Token.orth == allCaps})
)





Macro:DOTS
(
({Token.string == "."})[5]({Token.string == "."})+
)




Macro:MEASUREMENT
(
{Token.string == "mL"}|{Token.string == "nL"}|{Token.string == "cm"}|({Token.string == "in"}{Token.string == "."})|{Token.string == "µL"}|{Token.string ==~ "[Vv]"}|{Token.string == "Hz"}|{Token.string ==~ "[Kk]g"}|{Token.string == "MPa"}|{Token.string == "psi"}|{Token.string == "bar"}|{Token.string == "µm"}|{Token.string == "nm"}|{Token.string == "mm"}|{Token.string == "h"}|{Token.string == "mg"}|{Token.string == "µg"}|{Token.string == "L"}|{Token.string == "min"}|{Token.string == "mmol"}|{Token.string == "minutes"}
)


Macro:MEASUREMENTS
(
(MEASUREMENT)|
((MEASUREMENT){Token.string == "/"}(MEASUREMENT))
)




Macro:VALUE
(
(({Token.string ==~ "[<>]"})?{Token.kind == number}({Token.string == "."}{Token.kind == number})?({Token.string == "%"})?)|{Percent}|
((NUMBER){Token.string == "°"}{Token.string == "C"})|
((NUMBER)(MEASUREMENTS))|
((NUMBER){Token.string == "/"}(NUMBER))

)

Macro:DIMENSIONS
(
((NUMBER)(MEASUREMENT)?({Token.string ==~ "[Xx×]"})(((NUMBER)(MEASUREMENT)?)|{Token.string ==~ "[Xx×]"})+)(MEASUREMENTS)?
)


Macro:PHONE
(
({Token.kind == number})[10](({Token.kind == number})+)?
)


Macro:FEATURE_STRING
(
{Token.orth == upperInitial, Token.category ==~ "NN.*"}({Token.string == "and"}|{Token.string == "/"})?({Token.orth == upperInitial, Token.category ==~ "NN.*"}|({Token.string == "."}{Token.category ==~ "NN.*"}{Token.string == "."}))+(({Token.string == "I"}|({Token.string == "("}{Token.orth == allCaps}{Token.string == ")"}))+
)?
)








Rule:tm
(
((({Token.orth == upperInitial,Token.category ==~ "NN.*"}|{Token.orth == mixedCaps})(TM)(NUMBER)):a)|
(({Token.orth == upperInitial,Token.category ==~ "NN.*"}|{Token.orth == mixedCaps}):b(TM))|
((({Token.orth == upperInitial,Token.category ==~ "NN.*"})+(TM)(NUMBER)):c)|
((({Token.orth == upperInitial,Token.category ==~ "NN.*"})+):d(TM))|
((({Token.orth == allCaps})(TM)(NUMBER)):e)|
(({Token.orth == allCaps}):f(TM))|
(({Token.orth == allCaps}{Token.orth == upperInitial}):g(TM))

)
-->
:a.ENTITY = {type =  "NAME_TRADEMARK",string = :a@string},
:b.ENTITY = {type =  "NAME_TRADEMARK",string = :b@string},
:c.ENTITY = {type =  "NAME_TRADEMARK",string = :c@string},
:d.ENTITY = {type =  "NAME_TRADEMARK",string = :d@string},
:e.ENTITY = {type =  "NAME_TRADEMARK",string = :e@string},
:f.ENTITY = {type =  "NAME_TRADEMARK",string = :f@string},
:g.ENTITY = {type =  "NAME_TRADEMARK",string = :f@string}



Rule:tm
(
{Token.string == "©"}({Token.category == CD}|{Token.orth == upperInitial})+
):catName
-->
:catName.ENTITY = {type =  "NAME_TRADEMARK",string = :catName@string}



Rule:company
(
({Token}):catName{Token.string == "is"}{Token.string == "a"}({Token.string == "registered"})?{Token.string == "trademark"}{Token.string == "of"}({Token.string == "the"})?
((({Token.category ==~ "NN.*"})+(({Token.string == "Co"}{Token.string == "."})|({Token.string == "Inc"}{Token.string == "."}))?):company)
)
-->
:catName.ENTITY = {type =  "NAME_TRADEMARK",string = :catName@string},
:company.ENTITY = {type =  "NAME_COMPANY",string = :company@string}


Rule:company
(
({Token.orth == upperInitial})+({Token.string == "&"})?({Token.string == "Inc"}|{Token.string == "Co"})({Token.string == "."})
):company
-->
:company.ENTITY = {type =  "NAME_COMPANY",string = :company@string}













Rule:title
(
{title}
):catName
-->
:catName.ENTITY_TITLE = {type =  "TITLE_NAME",string = :catName@string}













/*
Rule:model
(
(MODEL)
):catName
-->
:catName.model = {string = :catName@string}
*/



Rule:model
(
({Token.orth == allCaps, Token.length > 3}|({Token.orth == allCaps}(NUMBER)({Token.string==~ "[A-Z]"})?(MODEL)?))
):catName
-->
:catName.ENTITY = {type =  "NAME_PARTS",string = :catName@string}






Rule:spec
(
	(({Token.orth == allCaps}|{Token.orth == mixedCaps})(NUMBER))|
	({Token.category == SYM,Token.string != "="}(NUMBER))
):catName
-->
:catName.ENTITY = {type =  "NAME_SPEC",string = :catName@string}








Rule:Dots
((DOTS)):d
-->
:d.DOT={string=:d@string}



Rule:Values
(
(VALUE)
//|
//((NUMBER){Token.string == "°"}{Token.string == "C"})|
//((NUMBER)(MEASUREMENTS))

):catName
-->
:catName.FEATURE=  {type = "VALUES", string = :catName@string}




Rule:Dimensions
(
(DIMENSIONS)

):catName
-->
:catName.FEATURE=  {type = "DIMENSION",string = :catName@string}



Rule:RANGES
(
(NUMBER){Token.string == "–"}(VALUE)
//|
//(NUMBER){Token.string == "–"}(NUMBER)(MEASUREMENTS)

):catName
-->
:catName.FEATURE=  {type = "VALUES",string = :catName@string}

//************************************************************************************************************


Rule:Features
(
(FEATURE_STRING)({Token.string ==~ "system(s?)"}|{Token.string ==~ "software(s?)"})?
):catName
-->
:catName.FEATURE = {type = "feature",string = :catName@string}


Rule:Features1
(
{Token.orth== allCaps}({Token.orth == upperInitial}|{Token.orth == mixedCaps})+({Token.string ==~ "[:]"})
):catName
-->
:catName.FEATURE = {type = "feature",string = :catName@string}


Rule:Features2
(
({Token.orth== allCaps}|{Token.orth== upperInitial})(VALUE)
):catName
-->
:catName.FEATURE = {type = "feature_values",string = :catName@string}



Rule:Value_Ranges
(
{Token.category == CD}({Token.category == CD}|{Token.string == ","}|{Token.string == "and"})+(VALUE)
):catName
-->
:catName.FEATURE ={type = "VALUES",string = :catName@string}




//For document 3:Bro-ultimate-basic automated







Rule:Identify_misc
(
{Token.orth == allCaps}(({Token.orth == allCaps}|{Token.string == "/"})+)?
):catName
-->
:catName.MISC=  {type = "feature", string = :catName@string}






Rule:Feature
(
({Token.orth == upperInitial})+{Token.string == "%"}
):catName
-->
:catName.FEATURE1=  {type = "feature", string = :catName@string}


//for doc 1- 35581Bro-Ultimate
Rule:Feature
(
({Token.orth == upperInitial})+{Token.string == "#"}(VALUE)
):catName
-->
:catName.FEATURE=  {type = "feature_values", string = :catName@string}





Rule:Phone
Priority:10
(
{Token.string == "+"}(PHONE)
):catName
-->
:catName.ENTITY = {type = "PHONE_NUMBER",string = :catName@string}



Rule:Time
(
{Token.kind == number}{Token.string == ":"}{Token.kind == number}({Token.string ==~ "[Aa][Mm]"}|{Token.string ==~ "[Pp][Mm]"})
):catName
-->
:catName.FEATURE = {type = "TIME",string = :catName@string}


//*****************************************************************************
//specific rules
//word-word-word
Rule:feature
(
({Token.orth == upperInitial,Token.length>15})
):catName
-->
:catName.FEATURE = {type = "feature",string = :catName@string}


Rule:Mixedcaps
(
({Token.orth == mixedCaps,Token.length >2})+({Token.string == "Systems"}|{Token.string == "system"})?
):catName
-->
:catName.ENTITY = {type = "NAME_SPEC",string = :catName@string}






