Phase: Phase11
Input: keySent Token SPACE SpaceToken TITLE_SENTENCE title
Options: control = appelt

/*
Rule:Sentence_extraction
(
({Token, Token within SPACE_SENTENCE, Token.string != ":",Token notWithin SPACE, Token.kind!= number, Token.orth != lowercase, Token.orth != mixedCaps })+{Token, Token within SPACE_SENTENCE, Token.string == ":"}
(({Token, Token within SPACE_SENTENCE, Token.string != ":",Token notWithin SPACE})+)?({Token, Token within SPACE_SENTENCE,Token within SPACE, Token.kind == word})
):catName
-->
:catName.SPACE_SENTENCE1 = {string = :catName@string, length = :catName.keySent@length}
*/


Rule:Sentence_extraction
(
({Token, Token within SPACE_SENTENCE, Token.string != ":",Token notWithin SPACE, Token.kind!= number, Token.orth != lowercase, Token.orth != mixedCaps })
(({Token, Token within SPACE_SENTENCE, Token.string != ":",Token notWithin SPACE, Token.kind!= number, Token.orth != lowercase, Token.orth != mixedCaps }|{SpaceToken.kind == space})+)?

({Token, Token within SPACE_SENTENCE, Token.string == ":"})

(({Token, Token within SPACE_SENTENCE, Token.string != ":",Token notWithin SPACE}|{SpaceToken})+)
({Token, Token within SPACE_SENTENCE,Token within SPACE, Token.kind == word}|{SpaceToken.kind == control})
):catName
-->
:catName.SPACE_SENTENCE1 = {string = :catName@string, length = :catName.keySent@length}




Rule:Sentence_extraction
(
({Token, Token within TITLE_SENTENCE, Token notWithin title}({SpaceToken})?)+
):catName1
-->
:catName1.NEW_SENTENCE5 = {string = :catName1@string}













/*
Rule:Sentence_extraction
(
({Token, Token within SPACE_SENTENCE, Token.string != ":",Token notWithin SPACE})+{Token, Token within SPACE_SENTENCE, Token.string == ":"}(({Token, Token within SPACE_SENTENCE, Token.string != ":",Token notWithin SPACE})+)?{Token, Token within SPACE_SENTENCE,Token within SPACE}
):catName
-->
:catName.SPACE_SENTENCE1 = {string = :catName@string, length = :catName.keySent@length}
*/




//In separating sentences having table structure, so exceptions are occuring. 


























